{"ast":null,"code":"const loadMiddleware = async (req, res, middleware) => {\n  return new Promise((resolve, reject) => {\n    middleware(req, res, result => {\n      if (result instanceof Error) {\n        return reject(result);\n      }\n\n      return resolve(result);\n    });\n  });\n};\n\nexport default loadMiddleware;","map":{"version":3,"sources":["/home/travis/Repos/btc-hourly-price/lib/loadMiddleware.js"],"names":["loadMiddleware","req","res","middleware","Promise","resolve","reject","result","Error"],"mappings":"AAAA,MAAMA,cAAc,GAAG,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,UAAjB,KAAgC;AACtD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvCH,IAAAA,UAAU,CAACF,GAAD,EAAMC,GAAN,EAAWK,MAAM,IAAI;AAC9B,UAAIA,MAAM,YAAYC,KAAtB,EAA6B;AAC5B,eAAOF,MAAM,CAACC,MAAD,CAAb;AACA;;AAED,aAAOF,OAAO,CAACE,MAAD,CAAd;AACA,KANS,CAAV;AAOA,GARM,CAAP;AASA,CAVD;;AAYA,eAAeP,cAAf","sourcesContent":["const loadMiddleware = async (req, res, middleware) => {\n\treturn new Promise((resolve, reject) => {\n\t\tmiddleware(req, res, result => {\n\t\t\tif (result instanceof Error) {\n\t\t\t\treturn reject(result)\n\t\t\t}\n\n\t\t\treturn resolve(result)\n\t\t})\n\t})\n}\n\nexport default loadMiddleware\n"]},"metadata":{},"sourceType":"module"}