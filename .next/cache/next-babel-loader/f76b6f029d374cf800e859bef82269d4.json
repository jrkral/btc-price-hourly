{"ast":null,"code":"const Twitter = require('twitter-lite');\n\nconst env = require('../config/env');\n\nconst opts = {\n  subdomain: 'api',\n  // \"api\" is the default (change for other subdomains)\n  version: '1.1',\n  // version \"1.1\" is the default (change for other subdomains)\n  consumer_key: env.CONSUMER_KEY,\n  // from Twitter.\n  consumer_secret: env.CONSUMER_SECRET,\n  // from Twitter.\n  access_token_key: env.ACCESS_TOKEN_KEY,\n  // from your User (oauth_token)\n  access_token_secret: env.ACCESS_TOKEN_SECRET // from your User (oauth_token_secret)\n\n};\nconst client = new Twitter(opts);\n\nconst getTwitterClient = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const results = await client.get('account/verify_credentials');\n      console.log(`\\n🐦 Twitter client connected to user @${results.screen_name}!\\n`);\n      resolve(client);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport default getTwitterClient;","map":{"version":3,"sources":["/home/travis/Repos/btc-hourly-price/lib/getTwitterClient.js"],"names":["Twitter","require","env","opts","subdomain","version","consumer_key","CONSUMER_KEY","consumer_secret","CONSUMER_SECRET","access_token_key","ACCESS_TOKEN_KEY","access_token_secret","ACCESS_TOKEN_SECRET","client","getTwitterClient","Promise","resolve","reject","results","get","console","log","screen_name","error"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,eAAD,CAAnB;;AAEA,MAAME,IAAI,GAAG;AACZC,EAAAA,SAAS,EAAE,KADC;AACM;AAClBC,EAAAA,OAAO,EAAE,KAFG;AAEI;AAChBC,EAAAA,YAAY,EAAEJ,GAAG,CAACK,YAHN;AAGoB;AAChCC,EAAAA,eAAe,EAAEN,GAAG,CAACO,eAJT;AAI0B;AACtCC,EAAAA,gBAAgB,EAAER,GAAG,CAACS,gBALV;AAK4B;AACxCC,EAAAA,mBAAmB,EAAEV,GAAG,CAACW,mBANb,CAMkC;;AANlC,CAAb;AASA,MAAMC,MAAM,GAAG,IAAId,OAAJ,CAAYG,IAAZ,CAAf;;AAEA,MAAMY,gBAAgB,GAAG,MAAM;AAC9B,SAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC7C,QAAI;AACH,YAAMC,OAAO,GAAG,MAAML,MAAM,CAACM,GAAP,CAAW,4BAAX,CAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CACE,0CAAyCH,OAAO,CAACI,WAAY,KAD/D;AAGAN,MAAAA,OAAO,CAACH,MAAD,CAAP;AACA,KAND,CAME,OAAOU,KAAP,EAAc;AACfN,MAAAA,MAAM,CAACM,KAAD,CAAN;AACA;AACD,GAVM,CAAP;AAWA,CAZD;;AAcA,eAAeT,gBAAf","sourcesContent":["const Twitter = require('twitter-lite')\nconst env = require('../config/env')\n\nconst opts = {\n\tsubdomain: 'api', // \"api\" is the default (change for other subdomains)\n\tversion: '1.1', // version \"1.1\" is the default (change for other subdomains)\n\tconsumer_key: env.CONSUMER_KEY, // from Twitter.\n\tconsumer_secret: env.CONSUMER_SECRET, // from Twitter.\n\taccess_token_key: env.ACCESS_TOKEN_KEY, // from your User (oauth_token)\n\taccess_token_secret: env.ACCESS_TOKEN_SECRET, // from your User (oauth_token_secret)\n}\n\nconst client = new Twitter(opts)\n\nconst getTwitterClient = () => {\n\treturn new Promise(async (resolve, reject) => {\n\t\ttry {\n\t\t\tconst results = await client.get('account/verify_credentials')\n\t\t\tconsole.log(\n\t\t\t\t`\\n🐦 Twitter client connected to user @${results.screen_name}!\\n`\n\t\t\t)\n\t\t\tresolve(client)\n\t\t} catch (error) {\n\t\t\treject(error)\n\t\t}\n\t})\n}\n\nexport default getTwitterClient\n"]},"metadata":{},"sourceType":"module"}